import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnInit, QueryList, SimpleChanges } from '@angular/core';
import Swiper from 'swiper/core';
import { Observable, Subject } from 'rxjs';
import { SwiperSlideDirective } from './swiper-slide.directive';
import { SwiperOptions, SwiperEvents, NavigationOptions, PaginationOptions, ScrollbarOptions, VirtualOptions } from 'swiper/types';
export declare class SwiperComponent implements OnInit {
    private _ngZone;
    private elementRef;
    private _changeDetectorRef;
    private _platformId;
    direction: SwiperOptions['direction'];
    touchEventsTarget: SwiperOptions['touchEventsTarget'];
    initialSlide: SwiperOptions['initialSlide'];
    speed: SwiperOptions['speed'];
    cssMode: SwiperOptions['cssMode'];
    updateOnWindowResize: SwiperOptions['updateOnWindowResize'];
    resizeObserver: SwiperOptions['resizeObserver'];
    nested: SwiperOptions['nested'];
    focusableElements: SwiperOptions['focusableElements'];
    width: SwiperOptions['width'];
    height: SwiperOptions['height'];
    preventInteractionOnTransition: SwiperOptions['preventInteractionOnTransition'];
    userAgent: SwiperOptions['userAgent'];
    url: SwiperOptions['url'];
    edgeSwipeDetection: boolean | string;
    edgeSwipeThreshold: number;
    freeMode: SwiperOptions['freeMode'];
    freeModeMomentum: SwiperOptions['freeModeMomentum'];
    freeModeMomentumRatio: SwiperOptions['freeModeMomentumRatio'];
    freeModeMomentumBounce: SwiperOptions['freeModeMomentumBounce'];
    freeModeMomentumBounceRatio: SwiperOptions['freeModeMomentumBounceRatio'];
    freeModeMomentumVelocityRatio: SwiperOptions['freeModeMomentumVelocityRatio'];
    freeModeSticky: SwiperOptions['freeModeSticky'];
    freeModeMinimumVelocity: SwiperOptions['freeModeMinimumVelocity'];
    autoHeight: SwiperOptions['autoHeight'];
    setWrapperSize: SwiperOptions['setWrapperSize'];
    virtualTranslate: SwiperOptions['virtualTranslate'];
    effect: SwiperOptions['effect'];
    breakpoints: SwiperOptions['breakpoints'];
    spaceBetween: SwiperOptions['spaceBetween'];
    slidesPerView: SwiperOptions['slidesPerView'];
    slidesPerColumn: SwiperOptions['slidesPerColumn'];
    slidesPerColumnFill: SwiperOptions['slidesPerColumnFill'];
    slidesPerGroup: SwiperOptions['slidesPerGroup'];
    slidesPerGroupSkip: SwiperOptions['slidesPerGroupSkip'];
    centeredSlides: SwiperOptions['centeredSlides'];
    centeredSlidesBounds: SwiperOptions['centeredSlidesBounds'];
    slidesOffsetBefore: SwiperOptions['slidesOffsetBefore'];
    slidesOffsetAfter: SwiperOptions['slidesOffsetAfter'];
    normalizeSlideIndex: SwiperOptions['normalizeSlideIndex'];
    centerInsufficientSlides: SwiperOptions['centerInsufficientSlides'];
    watchOverflow: SwiperOptions['watchOverflow'];
    roundLengths: SwiperOptions['roundLengths'];
    touchRatio: SwiperOptions['touchRatio'];
    touchAngle: SwiperOptions['touchAngle'];
    simulateTouch: SwiperOptions['simulateTouch'];
    shortSwipes: SwiperOptions['shortSwipes'];
    longSwipes: SwiperOptions['longSwipes'];
    longSwipesRatio: SwiperOptions['longSwipesRatio'];
    longSwipesMs: SwiperOptions['longSwipesMs'];
    followFinger: SwiperOptions['followFinger'];
    allowTouchMove: SwiperOptions['allowTouchMove'];
    threshold: SwiperOptions['threshold'];
    touchMoveStopPropagation: SwiperOptions['touchMoveStopPropagation'];
    touchStartPreventDefault: SwiperOptions['touchStartPreventDefault'];
    touchStartForcePreventDefault: SwiperOptions['touchStartForcePreventDefault'];
    touchReleaseOnEdges: SwiperOptions['touchReleaseOnEdges'];
    uniqueNavElements: SwiperOptions['uniqueNavElements'];
    resistance: SwiperOptions['resistance'];
    resistanceRatio: SwiperOptions['resistanceRatio'];
    watchSlidesProgress: SwiperOptions['watchSlidesProgress'];
    watchSlidesVisibility: SwiperOptions['watchSlidesVisibility'];
    grabCursor: SwiperOptions['grabCursor'];
    preventClicks: SwiperOptions['preventClicks'];
    preventClicksPropagation: SwiperOptions['preventClicksPropagation'];
    slideToClickedSlide: SwiperOptions['slideToClickedSlide'];
    preloadImages: SwiperOptions['preloadImages'];
    updateOnImagesReady: SwiperOptions['updateOnImagesReady'];
    loop: SwiperOptions['loop'];
    loopAdditionalSlides: SwiperOptions['loopAdditionalSlides'];
    loopedSlides: SwiperOptions['loopedSlides'];
    loopFillGroupWithBlank: SwiperOptions['loopFillGroupWithBlank'];
    loopPreventsSlide: SwiperOptions['loopPreventsSlide'];
    allowSlidePrev: SwiperOptions['allowSlidePrev'];
    allowSlideNext: SwiperOptions['allowSlideNext'];
    swipeHandler: SwiperOptions['swipeHandler'];
    noSwiping: SwiperOptions['noSwiping'];
    noSwipingClass: SwiperOptions['noSwipingClass'];
    noSwipingSelector: SwiperOptions['noSwipingSelector'];
    passiveListeners: SwiperOptions['passiveListeners'];
    containerModifierClass: SwiperOptions['containerModifierClass'];
    slideClass: SwiperOptions['slideClass'];
    slideBlankClass: SwiperOptions['slideBlankClass'];
    slideActiveClass: SwiperOptions['slideActiveClass'];
    slideDuplicateActiveClass: SwiperOptions['slideDuplicateActiveClass'];
    slideVisibleClass: SwiperOptions['slideVisibleClass'];
    slideDuplicateClass: SwiperOptions['slideDuplicateClass'];
    slideNextClass: SwiperOptions['slideNextClass'];
    slideDuplicateNextClass: SwiperOptions['slideDuplicateNextClass'];
    slidePrevClass: SwiperOptions['slidePrevClass'];
    slideDuplicatePrevClass: SwiperOptions['slideDuplicatePrevClass'];
    wrapperClass: SwiperOptions['wrapperClass'];
    runCallbacksOnInit: SwiperOptions['runCallbacksOnInit'];
    observeParents: SwiperOptions['observeParents'];
    observeSlideChildren: SwiperOptions['observeSlideChildren'];
    a11y: SwiperOptions['a11y'];
    autoplay: SwiperOptions['autoplay'];
    controller: SwiperOptions['controller'];
    coverflowEffect: SwiperOptions['coverflowEffect'];
    cubeEffect: SwiperOptions['cubeEffect'];
    fadeEffect: SwiperOptions['fadeEffect'];
    flipEffect: SwiperOptions['flipEffect'];
    hashNavigation: SwiperOptions['hashNavigation'];
    history: SwiperOptions['history'];
    keyboard: SwiperOptions['keyboard'];
    lazy: SwiperOptions['lazy'];
    mousewheel: SwiperOptions['mousewheel'];
    parallax: SwiperOptions['parallax'];
    thumbs: SwiperOptions['thumbs'];
    zoom: SwiperOptions['zoom'];
    class: string;
    id: string;
    set navigation(val: boolean | NavigationOptions);
    get navigation(): boolean | NavigationOptions;
    private _navigation;
    showNavigation: boolean;
    set pagination(val: boolean | PaginationOptions);
    get pagination(): boolean | PaginationOptions;
    private _pagination;
    showPagination: boolean;
    set scrollbar(val: boolean | ScrollbarOptions);
    get scrollbar(): boolean | ScrollbarOptions;
    private _scrollbar;
    showScrollbar: boolean;
    set virtual(val: boolean | VirtualOptions);
    get virtual(): boolean | VirtualOptions;
    private _virtual;
    set index(index: number);
    set config(val: SwiperOptions);
    s__beforeBreakpoint: EventEmitter<SwiperEvents['_beforeBreakpoint']>;
    s__containerClasses: EventEmitter<SwiperEvents['_containerClasses']>;
    s__slideClass: EventEmitter<SwiperEvents['_slideClass']>;
    s__swiper: EventEmitter<SwiperEvents['_swiper']>;
    s_activeIndexChange: EventEmitter<SwiperEvents['activeIndexChange']>;
    s_afterInit: EventEmitter<SwiperEvents['afterInit']>;
    s_autoplay: EventEmitter<SwiperEvents['autoplay']>;
    s_autoplayStart: EventEmitter<SwiperEvents['autoplayStart']>;
    s_autoplayStop: EventEmitter<SwiperEvents['autoplayStop']>;
    s_beforeDestroy: EventEmitter<SwiperEvents['beforeDestroy']>;
    s_beforeInit: EventEmitter<SwiperEvents['beforeInit']>;
    s_beforeLoopFix: EventEmitter<SwiperEvents['beforeLoopFix']>;
    s_beforeResize: EventEmitter<SwiperEvents['beforeResize']>;
    s_beforeSlideChangeStart: EventEmitter<SwiperEvents['beforeSlideChangeStart']>;
    s_beforeTransitionStart: EventEmitter<SwiperEvents['beforeTransitionStart']>;
    s_breakpoint: EventEmitter<SwiperEvents['breakpoint']>;
    s_changeDirection: EventEmitter<SwiperEvents['changeDirection']>;
    s_click: EventEmitter<SwiperEvents['click']>;
    s_doubleTap: EventEmitter<SwiperEvents['doubleTap']>;
    s_doubleClick: EventEmitter<SwiperEvents['doubleClick']>;
    s_destroy: EventEmitter<SwiperEvents['destroy']>;
    s_fromEdge: EventEmitter<SwiperEvents['fromEdge']>;
    s_hashChange: EventEmitter<SwiperEvents['hashChange']>;
    s_hashSet: EventEmitter<SwiperEvents['hashSet']>;
    s_imagesReady: EventEmitter<SwiperEvents['imagesReady']>;
    s_init: EventEmitter<SwiperEvents['init']>;
    s_keyPress: EventEmitter<SwiperEvents['keyPress']>;
    s_lazyImageLoad: EventEmitter<SwiperEvents['lazyImageLoad']>;
    s_lazyImageReady: EventEmitter<SwiperEvents['lazyImageReady']>;
    s_loopFix: EventEmitter<SwiperEvents['loopFix']>;
    s_momentumBounce: EventEmitter<SwiperEvents['momentumBounce']>;
    s_navigationHide: EventEmitter<SwiperEvents['navigationHide']>;
    s_navigationShow: EventEmitter<SwiperEvents['navigationShow']>;
    s_observerUpdate: EventEmitter<SwiperEvents['observerUpdate']>;
    s_orientationchange: EventEmitter<SwiperEvents['orientationchange']>;
    s_paginationHide: EventEmitter<SwiperEvents['paginationHide']>;
    s_paginationRender: EventEmitter<SwiperEvents['paginationRender']>;
    s_paginationShow: EventEmitter<SwiperEvents['paginationShow']>;
    s_paginationUpdate: EventEmitter<SwiperEvents['paginationUpdate']>;
    s_progress: EventEmitter<SwiperEvents['progress']>;
    s_reachBeginning: EventEmitter<SwiperEvents['reachBeginning']>;
    s_reachEnd: EventEmitter<SwiperEvents['reachEnd']>;
    s_realIndexChange: EventEmitter<SwiperEvents['realIndexChange']>;
    s_resize: EventEmitter<SwiperEvents['resize']>;
    s_scroll: EventEmitter<SwiperEvents['scroll']>;
    s_scrollbarDragEnd: EventEmitter<SwiperEvents['scrollbarDragEnd']>;
    s_scrollbarDragMove: EventEmitter<SwiperEvents['scrollbarDragMove']>;
    s_scrollbarDragStart: EventEmitter<SwiperEvents['scrollbarDragStart']>;
    s_setTransition: EventEmitter<SwiperEvents['setTransition']>;
    s_setTranslate: EventEmitter<SwiperEvents['setTranslate']>;
    s_slideChange: EventEmitter<SwiperEvents['slideChange']>;
    s_slideChangeTransitionEnd: EventEmitter<SwiperEvents['slideChangeTransitionEnd']>;
    s_slideChangeTransitionStart: EventEmitter<SwiperEvents['slideChangeTransitionStart']>;
    s_slideNextTransitionEnd: EventEmitter<SwiperEvents['slideNextTransitionEnd']>;
    s_slideNextTransitionStart: EventEmitter<SwiperEvents['slideNextTransitionStart']>;
    s_slidePrevTransitionEnd: EventEmitter<SwiperEvents['slidePrevTransitionEnd']>;
    s_slidePrevTransitionStart: EventEmitter<SwiperEvents['slidePrevTransitionStart']>;
    s_slideResetTransitionStart: EventEmitter<SwiperEvents['slideResetTransitionStart']>;
    s_slideResetTransitionEnd: EventEmitter<SwiperEvents['slideResetTransitionEnd']>;
    s_sliderMove: EventEmitter<SwiperEvents['sliderMove']>;
    s_sliderFirstMove: EventEmitter<SwiperEvents['sliderFirstMove']>;
    s_slidesLengthChange: EventEmitter<SwiperEvents['slidesLengthChange']>;
    s_slidesGridLengthChange: EventEmitter<SwiperEvents['slidesGridLengthChange']>;
    s_snapGridLengthChange: EventEmitter<SwiperEvents['snapGridLengthChange']>;
    s_snapIndexChange: EventEmitter<SwiperEvents['snapIndexChange']>;
    s_tap: EventEmitter<SwiperEvents['tap']>;
    s_toEdge: EventEmitter<SwiperEvents['toEdge']>;
    s_touchEnd: EventEmitter<SwiperEvents['touchEnd']>;
    s_touchMove: EventEmitter<SwiperEvents['touchMove']>;
    s_touchMoveOpposite: EventEmitter<SwiperEvents['touchMoveOpposite']>;
    s_touchStart: EventEmitter<SwiperEvents['touchStart']>;
    s_transitionEnd: EventEmitter<SwiperEvents['transitionEnd']>;
    s_transitionStart: EventEmitter<SwiperEvents['transitionStart']>;
    s_update: EventEmitter<SwiperEvents['update']>;
    s_zoomChange: EventEmitter<SwiperEvents['zoomChange']>;
    s_swiper: EventEmitter<any>;
    indexChange: EventEmitter<number>;
    set prevElRef(el: ElementRef);
    _prevElRef: ElementRef;
    set nextElRef(el: ElementRef);
    _nextElRef: ElementRef;
    set scrollbarElRef(el: ElementRef);
    _scrollbarElRef: ElementRef;
    set paginationElRef(el: ElementRef);
    _paginationElRef: ElementRef;
    slidesEl: QueryList<SwiperSlideDirective>;
    private slides;
    prependSlides: Observable<SwiperSlideDirective[]>;
    appendSlides: Observable<SwiperSlideDirective[]>;
    swiperRef: Swiper;
    readonly _activeSlides: Subject<SwiperSlideDirective[]>;
    get activeSlides(): Observable<SwiperSlideDirective[]>;
    get zoomContainerClass(): string;
    containerClasses: string;
    constructor(_ngZone: NgZone, elementRef: ElementRef, _changeDetectorRef: ChangeDetectorRef, _platformId: any);
    private _setElement;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    private childrenSlidesInit;
    private slidesChanges;
    get isSwiperActive(): boolean;
    initSwiper(): void;
    style: any;
    currentVirtualData: any;
    private updateVirtualSlides;
    ngOnChanges(changedParams: SimpleChanges): void;
    updateInitSwiper(changedParams: any): void;
    updateSwiper(changedParams: SimpleChanges | any): void;
    calcLoopedSlides(): number;
    updateParameter(key: any, value: any): void;
    setIndex(index: number, speed?: number, silent?: boolean): void;
    ngOnDestroy(): void;
}
